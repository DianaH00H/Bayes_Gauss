---
title: "Articulo 2"
authors:
  - name: Jorge Nevarez - A01645313
  - name: Alfredo Lopez - A01638976
  - name: Damian Luna - A01645865
  - name: Diana Hernandez - A01639515
format: html
editor: visual
---

## Establecemos semilla y llamamos las librerias necesarias:

```{r}
library(dplyr)
library(readr)
library(stringr)
library(stringi)
library(bnlearn)

set.seed(1234)
```

## Elegimos las variables que vamos a usar:

### calidad_aire

SO2 -\> SO_2 CO -\> CO NOX -\> NOx COV -\> COV PM010 -\> PM_010 PM2.5 -\> PM_2_5 NH3 -\> NH_3 Estado -\> Entidad_federativa Municipio -\> Municipio

### ensanut2022_socdem

Estado -\> desc_ent1 Municipio -\> desc_mun1 Meses -\> meses     

### ensanut2022_muestras

Sex -\> h0302 Age -\> h0303 Hemoglobin -\> hb02 HDL -\> valor_COL_HDL LDL -\> valor_COL_LDL Colest tot -\> valor_COLEST Creatinine -\> valor_CREAT Glucose -\> valor_EAG Insuline -\> valor_INSULINA PCR -\> valor_PCR Triglicerides -\> valor_TRIG HbA1C -\> valor_HB1AC Ferritine -\> valor_FERRITINA Folate -\> valor\_ valor_FOL Transferrine -\> valor_STFR_FEB23 Vit B12 -\> valor_VIT_B12 Vit D -\> valor_VIT_D

## Creamos df de los csv unidos:

```{r}
# Función para limpiar nombres

limpiar_nombre <- function(x) {
  x %>%
    str_remove("^[0-9]+\\s*") %>%  
    str_squish() %>%               
    str_to_lower() %>%             
    stri_trans_general("Latin-ASCII")  
}


# Cargar bases de datos

aire <- read_delim("data/calidad_aire_2025.csv")
socdem <- read_delim("data/ensanut2022_socdem.csv")
muestras  <- read_delim("data/ensanut2022_muestras.csv")


# Normalizar nombres

socdem <- socdem %>%
  mutate(
    Entidad_federativa = limpiar_nombre(desc_ent1),
    Municipio = limpiar_nombre(desc_mun1)
  )

muestras <- muestras %>%
  mutate(
    Entidad_federativa = limpiar_nombre(desc_ent),
    Municipio = limpiar_nombre(desc_mun)
  )

aire <- aire %>%
  mutate(
    Entidad_federativa = limpiar_nombre(Entidad_federativa),
    Municipio = limpiar_nombre(Municipio)
  )


# Renombrar columnas de emisiones

aire_rename <- c(
  "SO2" = "SO_2",
  "NOX" = "NOx",
  "PM10" = "PM_010",
  "PM25" = "PM_2_5",
  "NH3" = "NH_3"
)

aire <- aire %>% rename(!!!aire_rename)


# Resumir aire por municipio y fuente fija

aire_municipio <- aire %>%
  filter(Tipo_de_Fuente == "Fuentes fijas") %>%
  group_by(Entidad_federativa, Municipio) %>%
  summarise(
    SO2   = sum(SO2, na.rm = TRUE),
    CO    = sum(CO, na.rm = TRUE),
    NOX   = sum(NOX, na.rm = TRUE),
    COV   = sum(COV, na.rm = TRUE),
    PM10  = sum(PM10, na.rm = TRUE),
    PM25  = sum(PM25, na.rm = TRUE),
    NH3   = sum(NH3, na.rm = TRUE),
    .groups = "drop"
  )


# Selección y renombrado de columnas

socdem <- socdem %>%
  select(FOLIO_I, FOLIO_INT, Entidad_federativa, Municipio, meses) %>%
  rename(Meses = meses)

muestras <- muestras %>%
  select(FOLIO_I, FOLIO_INT, Entidad_federativa, Municipio,
         h0302, h0303, hb02, valor_COL_HDL, valor_COL_LDL, valor_COLEST,
         valor_CREAT, valor_EAG, valor_INSULINA, valor_PCR, valor_TRIG,
         valor_HB1AC, valor_FERRITINA, valor_FOL, valor_STFR_FEB23,
         valor_VIT_B12, valor_VIT_D) %>%
  rename(
    Sex = h0302,
    Age = h0303,
    Hemoglobin = hb02,
    HDL = valor_COL_HDL,
    LDL = valor_COL_LDL,
    Colest_tot = valor_COLEST,
    Creatinine = valor_CREAT,
    Glucose = valor_EAG,
    Insuline = valor_INSULINA,
    PCR = valor_PCR,
    Triglicerides = valor_TRIG,
    HbA1C = valor_HB1AC,
    Ferritine = valor_FERRITINA,
    Folate = valor_FOL,
    Transferrine = valor_STFR_FEB23,
    Vit_B12 = valor_VIT_B12,
    Vit_D = valor_VIT_D
  )


# Variables 


vars <- c(
    "FOLIO_INT", "Entidad_federativa", "Municipio", 
  "Sex", "Age", "Hemoglobin", "HDL", "LDL", "Colest_tot", 
  "Creatinine", "Glucose", "Insuline", "PCR", "Triglicerides", 
  "HbA1C", "Ferritine", "Folate", "Transferrine", "Vit_B12", "Vit_D",
  "Meses"
)

vars_muestra <- c("Hemoglobin", "HDL", "LDL", "Colest_tot", 
  "Creatinine", "Glucose", "Insuline", "PCR", "Triglicerides", 
  "HbA1C", "Ferritine", "Folate", "Transferrine", "Vit_B12", "Vit_D"
)

  

# Limpiar valores faltantes

muestras  <- muestras |> filter(if_all(all_of(vars_muestra), ~ !is.na(.x)))

# Unir bases

merged_df <- socdem %>%
  left_join(muestras, by = c("FOLIO_INT", "Municipio")) %>%
  left_join(aire_municipio, by = ("Municipio"))

# Eliminamos valores vacios de merged_df (Al juntarlos se generan nuevos valores vacios) 
#y luego convertimos a numericos los valores de muestras

merged_df  <- merged_df |> filter(if_all(all_of(vars), ~ !is.na(.x)))

merged_df <- merged_df %>%
  mutate(across(
    c(vars_muestra),
    as.numeric
  ))

# Eliminar cols duplicados

merged_df <- merged_df %>% select(-FOLIO_I.x, -FOLIO_I.y, -Entidad_federativa, -Entidad_federativa.y)

# Resultado
muestras
merged_df
```

## 3 DAG's propuestas:

### Dag 1 \[Persona entrevistada: Samantha Nevarez Soto estudiante de medicina\]

Creamos la dag Ejemplo: '\[T\]\[R\]\[H\|T:R\]\[pH\|T:R\]\[N\|H\]\[K\|H\]\[P\|pH\]\[Y\|N:K:P\]'

```{r}

#creacion de la primera DAG sin variables cualitativas

colnames(merged_df) = c("Age", "Hemoglobin", "HDL", "LDL", "Colest_tot", "Glucose",
                   "Insuline", "PCR", "Triglicerides", "HbA1C", "Ferritine",
                   "Transferrine","Vit_D", "SO2", "CO", "NOX", "COV", "PM10",
                   "PM25", "NH3")
# Definir el DAG
dag1 = model2network("[Age][SO2][CO][NOX][COV][PM10][PM25][NH3][Hemoglobin|SO2:CO:NOX:COV:PM10:PM25:NH3][HDL|SO2:CO:NOX:COV:PM10:PM25:NH3:Age][LDL|SO2:CO:NOX:COV:PM10:PM25:NH3:Age][Colest_tot|SO2:CO:NOX:COV:PM10:PM25:NH3:Age][Glucose|SO2:CO:NOX:COV:PM10:PM25:NH3:Age][Insuline|SO2:CO:NOX:COV:PM10:PM25:NH3][PCR|SO2:CO:NOX:COV:PM10:PM25:NH3][Triglicerides|SO2:CO:NOX:COV:PM10:PM25:NH3][HbA1C|SO2:CO:NOX:COV:PM10:PM25:NH3][Ferritine|SO2:CO:NOX:COV:PM10:PM25:NH3:Age][Transferrine|SO2:CO:NOX:COV:PM10:PM25:NH3][Vit_D|SO2:CO:NOX:COV:PM10:PM25:NH3]")
```

```{r}
graphviz.plot(dag1, shape = "ellipse")
```

### Dag 2 \[Persona entrevistada: Angel David Hernández Almeida Ingeniero Biomédico del Real San José\]

Creamos la dag Ejemplo: '\[T\]\[R\]\[H\|T:R\]\[pH\|T:R\]\[N\|H\]\[K\|H\]\[P\|pH\]\[Y\|N:K:P\]'

```{r}
# DAG 2 (Ángel)
dag2_string <- paste0(
  "[Sex][Age][Meses][PM_2_5][PM_010][NOx][CO][SO_2][COV][NH_3]",
  "[PCR|PM_2_5:NOx:NH_3:Meses:Age]",
  "[Hemoglobin|Sex:Age:NOx]",
  "[Ferritine|Sex:Age:PCR]",
  "[Transferrine|Age:Ferritine]",
  "[Glucose|Age:PM_2_5:NOx:CO:Meses]",
  "[Insuline|Age:PM_2_5:NOx:CO:Glucose]",
  "[HbA1C|Age:Glucose]",
  "[HDL|Sex:Age:PM_2_5:Meses]",
  "[LDL|Age:PM_2_5:NOx:Meses]",
  "[Triglicerides|Age:PM_2_5:NOx:Meses]",
  "[Colest_tot|LDL:HDL:Triglicerides:Age]",
  "[Creatinine|Age:Sex:Meses]",
  "[Vit_D|Meses:Age:Sex:PM_2_5]",
  "[Vit_B12|Age:Meses]",
  "[Folate|Age:Meses]"
)


```

```{r}
dag2 <- model2network(dag2_string)

```

```{r}
graphviz.plot(dag2, shape = "ellipse")

```

### Dag 3 \[Nombre de persona entrevistada\]

Creamos la dag Ejemplo: '\[T\]\[R\]\[H\|T:R\]\[pH\|T:R\]\[N\|H\]\[K\|H\]\[P\|pH\]\[Y\|N:K:P\]'

```{r}
dag3 = model2network('')
```

```{r}
graphviz.plot(dag, shape = "ellipse")
```

## Limpiamos nuevamente la base de datos

Quitamos variables que no vamos a usar y valores nulos

```{r}
#df_limpio <- df_limpio %>% select(-)
#df_limpio
```

## GBN para las DAG's:

Dag 1

```{r}
gbn_1 = bn.fit(dag1, data = df_limpio)
```

Dag 2

```{r}
gbn_2 = bn.fit(dag2, data = df_limpio)
```

Dag 3

```{r}
gbn_3 = bn.fit(dag3, data = df_limpio)
```

## BIC y AIC de las GBN's:

```{r}
bic_scores <- c(
  dag1 = score(dag1, data = df_limpio, type = "bic-g"),
  dag2 = score(dag2, data = df_limpio, type = "bic-g"),
  dag3 = score(dag3, data = df_limpio, type = "bic-g")
)

aic_scores <- c(
  dag1 = score(dag1, data = df_limpio, type = "aic-g"),
  dag2 = score(dag2, data = df_limpio, type = "aic-g"),
  dag3 = score(dag3, data = df_limpio, type = "aic-g")
)

scores_df <- data.frame(
  DAG = c("dag1", "dag2", "dag3"),
  BIC = bic_scores,
  AIC = aic_scores
)

print(scores_df)
```

## Inclusión de variables categoricas:

## Mejor estructura:

## 3 Queries a resolver:

##✏️ Investiguen si incluir modelos no paramétricos les ayuda a mejorar el BIC y el AIC de su mejor modelo.:
